{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "QML",
  "patterns": [
    {
      "include": "#directives"
    },
    {
      "include": "#punctuation-semicolon"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#function_innards"
    },
    {
      "match": "(?<!\\.)\\b(true|false)(?!\\s*:)\\b",
      "name": "constant.language.boolean.$1.qml"
    },
    {
      "Beschreibung": "----START A->P -----QML Standart Objekte -------",
      "name": "markup.bold.qml",
      "match": "\\b(Abstract3DSeries)\\b|\\b(AbstractActionInput)\\b|\\b(AbstractAnimation)\\b|\\b(AbstractAxis)\\b|\\b(AbstractAxis3D)\\b|\\b(AbstractAxisInput)\\b|\\b(AbstractBarSeries)\\b|\\b(AbstractButton)\\b|\\b(AbstractClipAnimator)\\b|\\b(AbstractClipBlendNode)\\b|\\b(AbstractDataProxy)\\b|\\b(AbstractGraph3D)\\b|\\b(AbstractInputHandler3D)\\b|\\b(AbstractPhysicalDevice)\\b|\\b(AbstractRayCaster)\\b|\\b(AbstractSeries)\\b|\\b(AbstractSkeleton)\\b|\\b(AbstractTextureImage)\\b|\\b(Accelerometer)\\b|\\b(AccelerometerReading)\\b|\\b(Accessible)\\b|\\b(Action)\\b|\\b(ActionGroup)\\b|\\b(ActionInput)\\b|\\b(AdditiveClipBlend)\\b|\\b(Address)\\b|\\b(Affector)\\b|\\b(Age)\\b|\\b(AlphaCoverage)\\b|\\b(AlphaTest)\\b|\\b(Altimeter)\\b|\\b(AltimeterReading)\\b|\\b(AmbientLightReading)\\b|\\b(AmbientLightSensor)\\b|\\b(AmbientTemperatureReading)\\b|\\b(AmbientTemperatureSensor)\\b|\\b(AnalogAxisInput)\\b|\\b(AnchorAnimation)\\b|\\b(AnchorChanges)\\b|\\b(AngleDirection)\\b|\\b(AnimatedImage)\\b|\\b(AnimatedSprite)\\b|\\b(Animation)\\b|\\b(AnimationController)\\b|\\b(AnimationController)\\b|\\b(AnimationGroup)\\b|\\b(Animator)\\b|\\b(ApplicationWindow)\\b|\\b(ApplicationWindowStyle)\\b|\\b(AreaSeries)\\b|\\b(Armature)\\b|\\b(AttenuationModelInverse)\\b|\\b(AttenuationModelLinear)\\b|\\b(Attractor)\\b|\\b(Attribute)\\b|\\b(Audio)\\b|\\b(AudioCategory)\\b|\\b(AudioEngine)\\b|\\b(AudioListener)\\b|\\b(AudioSample)\\b|\\b(AuthenticationDialogRequest)\\b|\\b(Axis)\\b|\\b(AxisAccumulator)\\b|\\b(AxisSetting)\\b|\\b(BackspaceKey)\\b|\\b(Bar3DSeries)\\b|\\b(BarCategoryAxis)\\b|\\b(BarDataProxy)\\b|\\b(Bars3D)\\b|\\b(BarSeries)\\b|\\b(BarSet)\\b|\\b(BaseKey)\\b|\\b(Behavior)\\b|\\b(Binding)\\b|\\b(Blend)\\b|\\b(BlendedClipAnimator)\\b|\\b(BlendEquation)\\b|\\b(BlendEquationArguments)\\b|\\b(BlitFramebuffer)\\b|\\b(BluetoothDiscoveryModel)\\b|\\b(BluetoothService)\\b|\\b(BluetoothSocket)\\b|\\b(BorderImage)\\b|\\b(BorderImageMesh)\\b|\\b(BoxPlotSeries)\\b|\\b(BoxSet)\\b|\\b(BrightnessContrast)\\b|\\b(Buffer)\\b|\\b(BusyIndicator)\\b|\\b(BusyIndicatorStyle)\\b|\\b(Button)\\b|\\b(ButtonAxisInput)\\b|\\b(ButtonGroup)\\b|\\b(ButtonStyle)\\b|\\b(Calendar)\\b|\\b(CalendarStyle)\\b|\\b(Camera)\\b|\\b(Camera3D)\\b|\\b(CameraCapabilities)\\b|\\b(CameraCapture)\\b|\\b(CameraExposure)\\b|\\b(CameraFlash)\\b|\\b(CameraFocus)\\b|\\b(CameraImageProcessing)\\b|\\b(CameraLens)\\b|\\b(CameraRecorder)\\b|\\b(CameraSelector)\\b|\\b(CandlestickSeries)\\b|\\b(CandlestickSet)\\b|\\b(Canvas)\\b|\\b(Canvas3D)\\b|\\b(Canvas3DAbstractObject)\\b|\\b(Canvas3DActiveInfo)\\b|\\b(Canvas3DBuffer)\\b|\\b(Canvas3DContextAttributes)\\b|\\b(Canvas3DFrameBuffer)\\b|\\b(Canvas3DProgram)\\b|\\b(Canvas3DRenderBuffer)\\b|\\b(Canvas3DShader)\\b|\\b(Canvas3DShaderPrecisionFormat)\\b|\\b(Canvas3DTexture)\\b|\\b(Canvas3DTextureProvider)\\b|\\b(Canvas3DUniformLocation)\\b|\\b(CanvasGradient)\\b|\\b(CanvasImageData)\\b|\\b(CanvasPixelArray)\\b|\\b(Category)\\b|\\b(CategoryAxis)\\b|\\b(CategoryAxis3D)\\b|\\b(CategoryModel)\\b|\\b(CategoryRange)\\b|\\b(ChangeLanguageKey)\\b|\\b(ChartView)\\b|\\b(CheckBox)\\b|\\b(CheckBoxStyle)\\b|\\b(CheckDelegate)\\b|\\b(CircularGauge)\\b|\\b(CircularGaugeStyle)\\b|\\b(ClearBuffers)\\b|\\b(ClipAnimator)\\b|\\b(ClipPlane)\\b|\\b(CloseEvent)\\b|\\b(ColorAnimation)\\b|\\b(ColorDialog)\\b|\\b(ColorDialogRequest)\\b|\\b(ColorGradient)\\b|\\b(ColorGradientStop)\\b|\\b(Colorize)\\b|\\b(ColorMask)\\b|\\b(ColorOverlay)\\b|\\b(Column)\\b|\\b(ColumnLayout)\\b|\\b(ComboBox)\\b|\\b(ComboBoxStyle)\\b|\\b(Compass)\\b|\\b(CompassReading)\\b|\\b(Component)\\b|\\b(Component3D)\\b|\\b(ComputeCommand)\\b|\\b(ConeGeometry)\\b|\\b(ConicalGradient)\\b|\\b(Connections)\\b|\\b(ContactDetail)\\b|\\b(ContactDetails)\\b|\\b(Container)\\b|\\b(Context2D)\\b|\\b(Context3D)\\b|\\b(ContextMenuRequest)\\b|\\b(Control)\\b|\\b(CoordinateAnimation)\\b|\\b(CuboidGeometry)\\b|\\b(CuboidMesh)\\b|\\b(CullFace)\\b|\\b(CumulativeDirection)\\b|\\b(Custom3DItem)\\b|\\b(Custom3DLabel)\\b|\\b(Custom3DVolume)\\b|\\b(CustomParticle)\\b|\\b(CylinderGeometry)\\b|\\b(CylinderMesh)\\b|\\b(Date)\\b|\\b(DateTimeAxis)\\b|\\b(DelayButton)\\b|\\b(DelayButtonStyle)\\b|\\b(DelegateModel)\\b|\\b(DelegateModelGroup)\\b|\\b(DepthTest)\\b|\\b(Desaturate)\\b|\\b(Dial)\\b|\\b(Dialog)\\b|\\b(DialogButtonBox)\\b|\\b(DialStyle)\\b|\\b(DiffuseMapMaterial)\\b|\\b(DiffuseSpecularMapMaterial)\\b|\\b(DiffuseSpecularMaterial)\\b|\\b(Direction)\\b|\\b(DirectionalBlur)\\b|\\b(DirectionalLight)\\b|\\b(DispatchCompute)\\b|\\b(Displace)\\b|\\b(DistanceReading)\\b|\\b(DistanceSensor)\\b|\\b(Dithering)\\b|\\b(DoubleValidator)\\b|\\b(Drag)\\b|\\b(DragEvent)\\b|\\b(DragHandler)\\b|\\b(Drawer)\\b|\\b(DropArea)\\b|\\b(DropShadow)\\b|\\b(DwmFeatures)\\b|\\b(DynamicParameter)\\b|\\b(EditorialModel)\\b|\\b(Effect)\\b|\\b(EllipseShape)\\b|\\b(Emitter)\\b|\\b(EnterKey)\\b|\\b(EnterKeyAction)\\b|\\b(Entity)\\b|\\b(EntityLoader)\\b|\\b(EnvironmentLight)\\b|\\b(EventConnection)\\b|\\b(EventPoint)\\b|\\b(EventTouchPoint)\\b|\\b(ExclusiveGroup)\\b|\\b(ExtendedAttributes)\\b|\\b(ExtrudedTextGeometry)\\b|\\b(ExtrudedTextMesh)\\b|\\b(FastBlur)\\b|\\b(FileDialog)\\b|\\b(FileDialogRequest)\\b|\\b(FillerKey)\\b|\\b(FilterKey)\\b|\\b(FinalState)\\b|\\b(FirstPersonCameraController)\\b|\\b(Flickable)\\b|\\b(Flipable)\\b|\\b(Flow)\\b|\\b(FocusScope)\\b|\\b(FolderListModel)\\b|\\b(FontDialog)\\b|\\b(FontLoader)\\b|\\b(FontMetrics)\\b|\\b(FormValidationMessageRequest)\\b|\\b(ForwardRenderer)\\b|\\b(Frame)\\b|\\b(FrameAction)\\b|\\b(FrameGraphNode)\\b|\\b(Friction)\\b|\\b(FrontFace)\\b|\\b(FrustumCulling)\\b|\\b(FullScreenRequest)\\b|\\b(GammaAdjust)\\b|\\b(Gauge)\\b|\\b(GaugeStyle)\\b|\\b(GaussianBlur)\\b|\\b(GeocodeModel)\\b|\\b(Geometry)\\b|\\b(GeometryRenderer)\\b|\\b(GestureEvent)\\b|\\b(Glow)\\b|\\b(GLStateDumpExt)\\b|\\b(GoochMaterial)\\b|\\b(Gradient)\\b|\\b(GradientStop)\\b|\\b(GraphicsApiFilter)\\b|\\b(GraphicsInfo)\\b|\\b(Gravity)\\b|\\b(Grid)\\b|\\b(GridLayout)\\b|\\b(GridMesh)\\b|\\b(GridView)\\b|\\b(GroupBox)\\b|\\b(GroupGoal)\\b|\\b(Gyroscope)\\b|\\b(GyroscopeReading)\\b|\\b(HandlerPoint)\\b|\\b(HandwritingInputPanel)\\b|\\b(HandwritingModeKey)\\b|\\b(HBarModelMapper)\\b|\\b(HBoxPlotModelMapper)\\b|\\b(HCandlestickModelMapper)\\b|\\b(HeightMapSurfaceDataProxy)\\b|\\b(HideKeyboardKey)\\b|\\b(HistoryState)\\b|\\b(HolsterReading)\\b|\\b(HolsterSensor)\\b|\\b(HorizontalBarSeries)\\b|\\b(HorizontalPercentBarSeries)\\b|\\b(HorizontalStackedBarSeries)\\b|\\b(HPieModelMapper)\\b|\\b(HueSaturation)\\b|\\b(HumidityReading)\\b|\\b(HumiditySensor)\\b|\\b(HXYModelMapper)\\b|\\b(Icon)\\b|\\b(Image)\\b|\\b(ImageModel)\\b|\\b(ImageParticle)\\b|\\b(InnerShadow)\\b|\\b(InputChord)\\b|\\b(InputContext)\\b|\\b(InputEngine)\\b|\\b(InputHandler3D)\\b|\\b(InputMethod)\\b|\\b(InputModeKey)\\b|\\b(InputPanel)\\b|\\b(InputSequence)\\b|\\b(InputSettings)\\b|\\b(Instantiator)\\b|\\b(IntValidator)\\b|\\b(InvokedServices)\\b|\\b(IRProximityReading)\\b|\\b(IRProximitySensor)\\b|\\b(Item)\\b|\\b(ItemDelegate)\\b|\\b(ItemGrabResult)\\b|\\b(ItemModelBarDataProxy)\\b|\\b(ItemModelScatterDataProxy)\\b|\\b(ItemModelSurfaceDataProxy)\\b|\\b(ItemParticle)\\b|\\b(ItemSelectionModel)\\b|\\b(IviApplication)\\b|\\b(IviSurface)\\b|\\b(JavaScriptDialogRequest)\\b|\\b(Joint)\\b|\\b(JumpList)\\b|\\b(JumpListCategory)\\b|\\b(JumpListDestination)\\b|\\b(JumpListLink)\\b|\\b(JumpListSeparator)\\b|\\b(Key)\\b|\\b(KeyboardColumn)\\b|\\b(KeyboardDevice)\\b|\\b(KeyboardHandler)\\b|\\b(KeyboardLayout)\\b|\\b(KeyboardLayoutLoader)\\b|\\b(KeyboardRow)\\b|\\b(KeyboardStyle)\\b|\\b(KeyEvent)\\b|\\b(KeyframeAnimation)\\b|\\b(KeyIcon)\\b|\\b(KeyNavigation)\\b|\\b(KeyPanel)\\b|\\b(Keys)\\b|\\b(Label)\\b|\\b(Layer)\\b|\\b(LayerFilter)\\b|\\b(Layout)\\b|\\b(LayoutMirroring)\\b|\\b(Legend)\\b|\\b(LerpBlend)\\b|\\b(LevelAdjust)\\b|\\b(LevelOfDetail)\\b|\\b(LevelOfDetailBoundingSphere)\\b|\\b(LevelOfDetailLoader)\\b|\\b(LevelOfDetailSwitch)\\b|\\b(LidReading)\\b|\\b(LidSensor)\\b|\\b(Light)\\b|\\b(Light3D)\\b|\\b(LightReading)\\b|\\b(LightSensor)\\b|\\b(LinearGradient)\\b|\\b(LineSeries)\\b|\\b(LineShape)\\b|\\b(LineWidth)\\b|\\b(ListElement)\\b|\\b(ListModel)\\b|\\b(ListView)\\b|\\b(Loader)\\b|\\b(Locale)\\b|\\b(Location)\\b|\\b(LoggingCategory)\\b|\\b(LogicalDevice)\\b|\\b(LogValueAxis)\\b|\\b(LogValueAxis3DFormatter)\\b|\\b(Magnetometer)\\b|\\b(MagnetometerReading)\\b|\\b(Map)\\b|\\b(MapCircle)\\b|\\b(MapCircleObject)\\b|\\b(MapCopyrightNotice)\\b|\\b(MapGestureArea)\\b|\\b(MapIconObject)\\b|\\b(MapItemGroup)\\b|\\b(MapItemView)\\b|\\b(MapObjectView)\\b|\\b(MapParameter)\\b|\\b(MapPinchEvent)\\b|\\b(MapPolygon)\\b|\\b(MapPolygonObject)\\b|\\b(MapPolyline)\\b|\\b(MapPolylineObject)\\b|\\b(MapQuickItem)\\b|\\b(MapRectangle)\\b|\\b(MapRoute)\\b|\\b(MapRouteObject)\\b|\\b(MapType)\\b|\\b(Margins)\\b|\\b(MaskedBlur)\\b|\\b(MaskShape)\\b|\\b(Material)\\b|\\b(Matrix4x4)\\b|\\b(MediaPlayer)\\b|\\b(MemoryBarrier)\\b|\\b(Menu)\\b|\\b(MenuBar)\\b|\\b(MenuBarItem)\\b|\\b(MenuBarStyle)\\b|\\b(MenuItem)\\b|\\b(MenuSeparator)\\b|\\b(MenuStyle)\\b|\\b(Mesh)\\b|\\b(MessageDialog)\\b|\\b(ModeKey)\\b|\\b(MorphingAnimation)\\b|\\b(MorphTarget)\\b|\\b(MouseArea)\\b|\\b(MouseDevice)\\b|\\b(MouseEvent)\\b|\\b(MouseHandler)\\b|\\b(MultiPointHandler)\\b|\\b(MultiPointTouchArea)\\b|\\b(MultiSampleAntiAliasing)\\b|\\b(Navigator)\\b|\\b(NdefFilter)\\b|\\b(NdefMimeRecord)\\b|\\b(NdefRecord)\\b|\\b(NdefTextRecord)\\b|\\b(NdefUriRecord)\\b|\\b(NearField)\\b|\\b(Node)\\b|\\b(NodeInstantiator)\\b|\\b(NoDepthMask)\\b|\\b(NoDraw)\\b|\\b(NormalDiffuseMapAlphaMaterial)\\b|\\b(NormalDiffuseMapMaterial)\\b|\\b(NormalDiffuseSpecularMapMaterial)\\b|\\b(Number)\\b|\\b(NumberAnimation)\\b|\\b(NumberKey)\\b|\\b(Object3D)\\b|\\b(ObjectModel)\\b|\\b(ObjectPicker)\\b|\\b(OpacityAnimator)\\b|\\b(OpacityMask)\\b|\\b(OpenGLInfo)\\b|\\b(OrbitCameraController)\\b|\\b(OrientationReading)\\b|\\b(OrientationSensor)\\b|\\b(Overlay)\\b"
    },
    {
      "Beschreibung": "----START P->S -----QML Standart Objekte -------",
      "name": "markup.bold.qml",
      "match": "\\b(Package)\\b|\\b(Page)\\b|\\b(PageIndicator)\\b|\\b(Pane)\\b|\\b(ParallelAnimation)\\b|\\b(Parameter)\\b|\\b(ParentAnimation)\\b|\\b(ParentChange)\\b|\\b(Particle)\\b|\\b(ParticleGroup)\\b|\\b(ParticlePainter)\\b|\\b(ParticleSystem)\\b|\\b(Path)\\b|\\b(PathAngleArc)\\b|\\b(PathAnimation)\\b|\\b(PathArc)\\b|\\b(PathAttribute)\\b|\\b(PathCubic)\\b|\\b(PathCurve)\\b|\\b(PathElement)\\b|\\b(PathInterpolator)\\b|\\b(PathLine)\\b|\\b(PathMove)\\b|\\b(PathPercent)\\b|\\b(PathQuad)\\b|\\b(PathSvg)\\b|\\b(PathView)\\b|\\b(PauseAnimation)\\b|\\b(PercentBarSeries)\\b|\\b(PerVertexColorMaterial)\\b|\\b(PhongAlphaMaterial)\\b|\\b(PhongMaterial)\\b|\\b(PickEvent)\\b|\\b(PickingSettings)\\b|\\b(PickLineEvent)\\b|\\b(PickPointEvent)\\b|\\b(PickTriangleEvent)\\b|\\b(Picture)\\b|\\b(PieMenu)\\b|\\b(PieMenuStyle)\\b|\\b(PieSeries)\\b|\\b(PieSlice)\\b|\\b(PinchArea)\\b|\\b(PinchEvent)\\b|\\b(PinchHandler)\\b|\\b(Place)\\b|\\b(PlaceAttribute)\\b|\\b(PlaceSearchModel)\\b|\\b(PlaceSearchSuggestionModel)\\b|\\b(PlaneGeometry)\\b|\\b(PlaneMesh)\\b|\\b(Playlist)\\b|\\b(PlaylistItem)\\b|\\b(PlayVariation)\\b|\\b(Plugin)\\b|\\b(PluginParameter)\\b|\\b(PointDirection)\\b|\\b(PointerDevice)\\b|\\b(PointerDeviceHandler)\\b|\\b(PointerEvent)\\b|\\b(PointerHandler)\\b|\\b(PointHandler)\\b|\\b(PointLight)\\b|\\b(PointSize)\\b|\\b(PolarChartView)\\b|\\b(PolygonOffset)\\b|\\b(Popup)\\b|\\b(Position)\\b|\\b(Positioner)\\b|\\b(PositionSource)\\b|\\b(PressureReading)\\b|\\b(PressureSensor)\\b|\\b(Product)\\b|\\b(ProgressBar)\\b|\\b(ProgressBarStyle)\\b|\\b(PropertyAction)\\b|\\b(PropertyAnimation)\\b|\\b(PropertyChanges)\\b|\\b(ProximityFilter)\\b|\\b(ProximityReading)\\b|\\b(ProximitySensor)\\b|\\b(QAbstractState)\\b|\\b(QAbstractTransition)\\b|\\b(QSignalTransition)\\b|\\b(Qt)\\b|\\b(QtMultimedia)\\b|\\b(QtObject)\\b|\\b(QtPositioning)\\b|\\b(QuaternionAnimation)\\b|\\b(QuotaRequest)\\b|\\b(RadialBlur)\\b|\\b(RadialGradient)\\b|\\b(Radio)\\b|\\b(RadioButton)\\b|\\b(RadioButtonStyle)\\b|\\b(RadioData)\\b|\\b(RadioDelegate)\\b|\\b(RangeSlider)\\b|\\b(Ratings)\\b|\\b(RayCaster)\\b|\\b(Rectangle)\\b|\\b(RectangleShape)\\b|\\b(RectangularGlow)\\b|\\b(RecursiveBlur)\\b|\\b(RegExpValidator)\\b|\\b(RegisterProtocolHandlerRequest)\\b|\\b(RenderCapture)\\b|\\b(RenderCaptureReply)\\b|\\b(RenderPass)\\b|\\b(RenderPassFilter)\\b|\\b(RenderSettings)\\b|\\b(RenderState)\\b|\\b(RenderStateSet)\\b|\\b(RenderSurfaceSelector)\\b|\\b(RenderTarget)\\b|\\b(RenderTargetOutput)\\b|\\b(RenderTargetSelector)\\b|\\b(Repeater)\\b|\\b(ReviewModel)\\b|\\b(Rotation)\\b|\\b(RotationAnimation)\\b|\\b(RotationAnimator)\\b|\\b(RotationReading)\\b|\\b(RotationSensor)\\b|\\b(RoundButton)\\b|\\b(Route)\\b|\\b(RouteManeuver)\\b|\\b(RouteModel)\\b|\\b(RouteQuery)\\b|\\b(RouteSegment)\\b|\\b(Row)\\b|\\b(RowLayout)\\b|\\b(Scale)\\b|\\b(ScaleAnimator)\\b|\\b(Scatter3D)\\b|\\b(Scatter3DSeries)\\b|\\b(ScatterDataProxy)\\b|\\b(ScatterSeries)\\b|\\b(Scene2D)\\b|\\b(Scene3D)\\b|\\b(SceneLoader)\\b|\\b(ScissorTest)\\b|\\b(Screen)\\b|\\b(ScreenRayCaster)\\b|\\b(ScriptAction)\\b|\\b(ScrollBar)\\b|\\b(ScrollView)\\b|\\b(ScrollViewStyle)\\b|\\b(ScxmlStateMachine)\\b|\\b(SeamlessCubemap)\\b|\\b(SelectionListItem)\\b|\\b(SelectionListModel)\\b|\\b(Sensor)\\b|\\b(SensorGesture)\\b|\\b(SensorGlobal)\\b|\\b(SensorReading)\\b|\\b(SequentialAnimation)\\b|\\b(Settings)\\b|\\b(ShaderEffect)\\b|\\b(ShaderEffectSource)\\b|\\b(ShaderProgram)\\b|\\b(ShaderProgramBuilder)\\b|\\b(Shape)\\b|\\b(ShapeGradient)\\b|\\b(ShapePath)\\b|\\b(ShellSurface)\\b|\\b(ShellSurfaceItem)\\b|\\b(ShiftHandler)\\b|\\b(ShiftKey)\\b|\\b(Shortcut)\\b|\\b(SignalSpy)\\b|\\b(SignalTransition)\\b|\\b(SinglePointHandler)\\b|\\b(Skeleton)\\b|\\b(SkeletonLoader)\\b|\\b(Slider)\\b|\\b(SliderStyle)\\b|\\b(SmoothedAnimation)\\b|\\b(SortPolicy)\\b|\\b(Sound)\\b|\\b(SoundEffect)\\b|\\b(SoundInstance)\\b|\\b(SpaceKey)\\b|\\b(SphereGeometry)\\b|\\b(SphereMesh)\\b|\\b(SpinBox)\\b|\\b(SpinBoxStyle)\\b|\\b(SplineSeries)\\b|\\b(SplitView)\\b|\\b(SpotLight)\\b|\\b(SpringAnimation)\\b|\\b(Sprite)\\b|\\b(SpriteGoal)\\b|\\b(SpriteSequence)\\b|\\b(Stack)\\b|\\b(StackedBarSeries)\\b|\\b(StackLayout)\\b|\\b(StackView)\\b|\\b(StackViewDelegate)\\b|\\b(State)\\b|\\b(StateChangeScript)\\b|\\b(StateGroup)\\b|\\b(StateMachine)\\b|\\b(StateMachineLoader)\\b|\\b(StatusBar)\\b|\\b(StatusBarStyle)\\b|\\b(StatusIndicator)\\b|\\b(StatusIndicatorStyle)\\b|\\b(StencilMask)\\b|\\b(StencilOperation)\\b|\\b(StencilOperationArguments)\\b|\\b(StencilTest)\\b|\\b(StencilTestArguments)\\b|\\b(Store)\\b|\\b(String)\\b|\\b(Supplier)\\b|\\b(Surface3D)\\b|\\b(Surface3DSeries)\\b|\\b(SurfaceDataProxy)\\b|\\b(SwipeDelegate)\\b|\\b(SwipeView)\\b|\\b(Switch)\\b|\\b(SwitchDelegate)\\b|\\b(SwitchStyle)\\b|\\b(SymbolModeKey)\\b|\\b(SystemPalette)\\b|\\b(Tab)\\b|\\b(TabBar)\\b|\\b(TabButton)\\b|\\b(TableView)\\b|\\b(TableViewColumn)\\b|\\b(TableViewStyle)\\b|\\b(TabView)\\b|\\b(TabViewStyle)\\b|\\b(TapHandler)\\b|\\b(TapReading)\\b|\\b(TapSensor)\\b|\\b(TargetDirection)\\b|\\b(TaskbarButton)\\b|\\b(Technique)\\b|\\b(TechniqueFilter)\\b|\\b(TestCase)\\b|\\b(Text)\\b|\\b(TextArea)\\b|\\b(TextAreaStyle)\\b|\\b(TextEdit)\\b|\\b(TextField)\\b|\\b(TextFieldStyle)\\b|\\b(TextInput)\\b|\\b(TextMetrics)\\b|\\b(TextureImage)\\b|\\b(TextureImageFactory)\\b|\\b(Theme3D)\\b|\\b(ThemeColor)\\b|\\b(ThresholdMask)\\b|\\b(ThumbnailToolBar)\\b|\\b(ThumbnailToolButton)\\b|\\b(TiltReading)\\b|\\b(TiltSensor)\\b|\\b(TimeoutTransition)\\b|\\b(Timer)\\b|\\b(ToggleButton)\\b|\\b(ToggleButtonStyle)\\b|\\b(ToolBar)\\b|\\b(ToolBarStyle)\\b|\\b(ToolButton)\\b|\\b(ToolSeparator)\\b|\\b(ToolTip)\\b|\\b(Torch)\\b|\\b(TorusGeometry)\\b|\\b(TorusMesh)\\b|\\b(TouchEventSequence)\\b|\\b(TouchInputHandler3D)\\b"
    },
    {
      "Beschreibung": "----START T->Z -----QML Standart Objekte -------",
      "name": "markup.bold.qml",
      "match": "\\b(TouchPoint)\\b|\\b(Trace)\\b|\\b(TraceCanvas)\\b|\\b(TraceInputArea)\\b|\\b(TraceInputKey)\\b|\\b(TraceInputKeyPanel)\\b|\\b(TrailEmitter)\\b|\\b(Transaction)\\b|\\b(Transform)\\b|\\b(Transition)\\b|\\b(Translate)\\b|\\b(TreeView)\\b|\\b(TreeViewStyle)\\b|\\b(Tumbler)\\b|\\b(TumblerColumn)\\b|\\b(TumblerStyle)\\b|\\b(Turbulence)\\b|\\b(UniformAnimator)\\b|\\b(User)\\b|\\b(ValueAxis)\\b|\\b(ValueAxis3D)\\b|\\b(ValueAxis3DFormatter)\\b|\\b(VBarModelMapper)\\b|\\b(VBoxPlotModelMapper)\\b|\\b(VCandlestickModelMapper)\\b|\\b(Vector3dAnimation)\\b|\\b(VertexBlendAnimation)\\b|\\b(Video)\\b|\\b(VideoOutput)\\b|\\b(Viewport)\\b|\\b(ViewTransition)\\b|\\b(VirtualKeyboardSettings)\\b|\\b(VisualDataGroup)\\b|\\b(VisualDataModel)\\b|\\b(VisualItemModel)\\b|\\b(VPieModelMapper)\\b|\\b(VXYModelMapper)\\b|\\b(Wander)\\b|\\b(WaylandClient)\\b|\\b(WaylandCompositor)\\b|\\b(WaylandHardwareLayer)\\b|\\b(WaylandOutput)\\b|\\b(WaylandQuickItem)\\b|\\b(WaylandSeat)\\b|\\b(WaylandSurface)\\b|\\b(WaylandView)\\b|\\b(Waypoint)\\b|\\b(WebChannel)\\b|\\b(WebEngine)\\b|\\b(WebEngineCertificateError)\\b|\\b(WebEngineDownloadItem)\\b|\\b(WebEngineHistory)\\b|\\b(WebEngineHistoryListModel)\\b|\\b(WebEngineLoadRequest)\\b|\\b(WebEngineNavigationRequest)\\b|\\b(WebEngineNewViewRequest)\\b|\\b(WebEngineProfile)\\b|\\b(WebEngineScript)\\b|\\b(WebEngineSettings)\\b|\\b(WebEngineView)\\b|\\b(WebSocket)\\b|\\b(WebSocketServer)\\b|\\b(WebView)\\b|\\b(WebViewLoadRequest)\\b|\\b(WheelEvent)\\b|\\b(\\b(Window)\\b)\\b|\\b(WlShell)\\b|\\b(WlShellSurface)\\b|\\b(WorkerScript)\\b|\\b(XAnimator)\\b|\\b(XdgPopupV5)\\b|\\b(XdgPopupV6)\\b|\\b(XdgShellV5)\\b|\\b(XdgShellV6)\\b|\\b(XdgSurfaceV5)\\b|\\b(XdgSurfaceV6)\\b|\\b(XdgToplevelV6)\\b|\\b(XmlListModel)\\b|\\b(XmlRole)\\b|\\b(XYPoint)\\b|\\b(XYSeries)\\b|\\b(YAnimator)\\b|\\b(ZoomBlur)\\b"
    },
    {
      "Beschreibung": "QML Basistypen",
      "name": "storage.qml",
      "match": "\\b(bool)\\b|\\b(double)\\b|\\b(int)\\b|\\b(real)\\b|\\b(string)\\b|\\b(variant)\\b|\\b(var)\\b|\\b(const)\\b"
    },
    {
      "Beschreibung": "QML Basiswörter",
      "name": "variable.language.qml",
      "match": "\\b(color)\\b|\\b(coordinate)\\b|\\b(date)\\b|\\b(enumeration)\\b|\\b(font)\\b|\\b(geocircle)\\b|\\b(geopath)\\b|\\b(geopolygon)\\b|\\b(georectangle)\\b|\\b(geoshape)\\b|\\b(list)\\b|\\b(matrix4x4)\\b|\\b(mediaplayer-qml-dynamic)\\b|\\b(palette)\\b|\\b(point)\\b|\\b(quaternion)\\b|\\b(rect)\\b|\\b(size)\\b|\\b(url)\\b|\\b(vector2d)\\b|\\b(vector3d|vector4d)\\b"
    },
    {
      "name": "markup.changed.qml",
      "match": "\\d"
    },
    {
      "name": "markup.changed.qml",
      "match": "\\b(alias)\\b|\\b(signal)\\b"
    },
    {
      "name": "comment.qml",
      "match": "(//[\\t|\\s|\\w|\\d|\\.]*[\\r\\n|\\n|:])"
    },
    {
      "Beschreibung": "QML Usertypen",
      "name": "markup.changed.qml",
      "match": "\\w+(?={|{ | {| { \\b)"
    },
    {
      "Beschreibung": "QML Usertypen",
      "name": "markup.changed.qml",
      "match": "\\w+(?={|{ | {| { \\b)"
    },
    {
      "begin": "(?<![\\w$])console(?![\\w$]|\\s*:)",
      "beginCaptures": {
        "0": {
          "name": "entity.name.type.object.console.qml"
        }
      },
      "end": "(?x)\n(?<=\\)) | (?=\n  (?! (\\s*//)|(\\s*/\\*)|(\\s*(\\.)\\s*\n    (assert|clear|debug|error|info|log|profile|profileEnd|time|timeEnd|warn)\n    \\s*\\(\n  )) \\s*\\S\n)",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "begin": "\\s*(\\.)\\s*(\\w+)\\s*(?=\\()",
          "beginCaptures": {
            "1": {
              "name": "meta.delimiter.method.period.qml"
            },
            "2": {
              "name": "support.function.console.qml"
            }
          },
          "end": "(?<=\\))",
          "name": "meta.method-call.qml",
          "patterns": [
            {
              "include": "#arguments"
            }
          ]
        }
      ]
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#objects"
    },
    {
      "include": "#switch_statement"
    }
  ],
  "repository": {
    "keywords": {
      "Beschreibung": "QML und Javascript Schlüsselwörter",
      "patterns": [
        {
          "name": "keyword.control.qml",
          "match": "\\b(if)\\b|\\b(else)\\b|\\b(while)\\b|\\b(for)\\b|\\b(function)\\b|\\b(return)\\b|\\b(import)\\b|\\b(as)\\b|\\b(property)\\b|\\b(switch)\\b|\\b(case)\\b|\\b(break)\\b|\\b(default)\\b"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.block.documentation.qml",
          "begin": "/\\*\\*(?!/)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.qml"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.qml"
            }
          },
          "patterns": [
            {
              "include": "#docblock"
            }
          ]
        },
        {
          "name": "comment.block.qml",
          "begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.comment.qml"
            },
            "2": {
              "name": "storage.type.internaldeclaration.qml"
            },
            "3": {
              "name": "punctuation.decorator.internaldeclaration.qml"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.qml"
            }
          }
        },
        {
          "begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.qml"
            },
            "2": {
              "name": "comment.line.double-slash.qml"
            },
            "3": {
              "name": "punctuation.definition.comment.qml"
            },
            "4": {
              "name": "storage.type.internaldeclaration.qml"
            },
            "5": {
              "name": "punctuation.decorator.internaldeclaration.qml"
            }
          },
          "end": "(?=$)",
          "contentName": "comment.line.double-slash.qml"
        }
      ]
    },
    "single-line-comment-consuming-line-ending": {
      "begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.qml"
        },
        "2": {
          "name": "comment.line.double-slash.qml"
        },
        "3": {
          "name": "punctuation.definition.comment.qml"
        },
        "4": {
          "name": "storage.type.internaldeclaration.qml"
        },
        "5": {
          "name": "punctuation.decorator.internaldeclaration.qml"
        }
      },
      "end": "(?=^)",
      "contentName": "comment.line.double-slash.qml"
    },
    "function_innards": {
      "patterns": [
        {
          "match": "\\b(function)\\b(?:\\s*(\\*))?",
          "captures": {
            "1": {
              "name": "storage.type.function.qml"
            },
            "2": {
              "name": "storage.modifier.generator.qml"
            }
          }
        },
        {
          "match": "[a-zA-Z_$][\\w$]*(?=\\s*\\()",
          "name": "entity.name.function.qml"
        },
        {
          "include": "#function_params"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "function_params": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.bracket.round.qml"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.bracket.round.qml"
            }
          },
          "name": "meta.parameters.qml",
          "patterns": [
            {
              "match": "(\\.\\.\\.)([a-zA-Z_$][\\w$]*)",
              "captures": {
                "1": {
                  "name": "keyword.operator.spread.qml"
                },
                "2": {
                  "name": "variable.parameter.rest.function.qml"
                }
              }
            },
            {
              "include": "$self"
            },
            {
              "match": "[a-zA-Z_$][\\w$]*",
              "name": "variable.parameter.function.qml"
            }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.qml"
            }
          },
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.qml"
            }
          },
          "name": "string.quoted.single.qml",
          "patterns": [
            {
              "include": "#string_escapes"
            },
            {
              "match": "[^']*[^\\n\\r'\\\\]$",
              "name": "invalid.illegal.string.qml"
            }
          ]
        },
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.qml"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.qml"
            }
          },
          "name": "string.quoted.double.qml",
          "patterns": [
            {
              "include": "#string_escapes"
            },
            {
              "match": "[^\"]*[^\\n\\r\"\\\\]$",
              "name": "invalid.illegal.string.qml"
            }
          ]
        },
        {
          "begin": "`",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.qml"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.qml"
            }
          },
          "name": "string.quoted.template.qml",
          "patterns": [
            {
              "include": "#string_escapes"
            },
            {
              "include": "#interpolated_js"
            }
          ]
        }
      ]
    },
    "string_escapes": {
      "patterns": [
        {
          "match": "\\\\u(?![A-Fa-f0-9]{4}|{[A-Fa-f0-9]+})[^'\"]*",
          "name": "invalid.illegal.unicode-escape.qml"
        },
        {
          "match": "\\\\u(?:[A-Fa-f0-9]{4}|({)([A-Fa-f0-9]+)(}))",
          "name": "constant.character.escape.qml",
          "captures": {
            "1": {
              "name": "punctuation.definition.unicode-escape.begin.bracket.curly.qml"
            },
            "2": {
              "patterns": [
                {
                  "match": "[A-Fa-f\\d]{7,}|(?!10)[A-Fa-f\\d]{6}",
                  "name": "invalid.illegal.unicode-escape.qml"
                }
              ]
            },
            "3": {
              "name": "punctuation.definition.unicode-escape.end.bracket.curly.qml"
            }
          }
        },
        {
          "match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
          "name": "constant.character.escape.qml"
        }
      ]
    },
    "interpolated_js": {
      "patterns": [
        {
          "begin": "\\${",
          "captures": {
            "0": {
              "name": "punctuation.section.embedded.qml"
            }
          },
          "end": "}",
          "name": "source.js.embedded.source",
          "patterns": [
            {
              "begin": "{",
              "beginCaptures": {
                "0": {
                  "name": "meta.brace.curly.qml"
                }
              },
              "end": "}",
              "endCaptures": {
                "0": {
                  "name": "meta.brace.curly.qml"
                }
              },
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "%=|\\+=|-=|\\*=|(?<!\\()/=",
          "name": "keyword.operator.assignment.compound.qml"
        },
        {
          "match": "&=|\\^=|<<=|>>=|>>>=|\\|=",
          "name": "keyword.operator.assignment.compound.bitwise.qml"
        },
        {
          "match": "<<|>>>|>>",
          "name": "keyword.operator.bitwise.shift.qml"
        },
        {
          "match": "!==|!=|<=|>=|===|==|<|>",
          "name": "keyword.operator.comparison.qml"
        },
        {
          "match": "&&|!!|!|\\|\\|",
          "name": "keyword.operator.logical.qml"
        },
        {
          "match": "&|\\||\\^|~",
          "name": "keyword.operator.bitwise.qml"
        },
        {
          "match": "=|:",
          "name": "keyword.operator.assignment.qml"
        },
        {
          "match": "--",
          "name": "keyword.operator.decrement.qml"
        },
        {
          "match": "\\+\\+",
          "name": "keyword.operator.increment.qml"
        },
        {
          "match": "%|\\*|/|-|\\+",
          "name": "keyword.operator.qml"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b(?<!\\$)0(x|X)[0-9a-fA-F]+\\b(?!\\$)",
          "name": "constant.numeric.hex.qml"
        },
        {
          "match": "\\b(?<!\\$)0(b|B)[01]+\\b(?!\\$)",
          "name": "constant.numeric.binary.qml"
        },
        {
          "match": "\\b(?<!\\$)0(o|O)?[0-7]+\\b(?!\\$)",
          "name": "constant.numeric.octal.qml"
        },
        {
          "match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3\n  (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3\n  (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3\n  (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3\n  (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1\n  (?:\\b[0-9]+(\\.)\\B)|                      # 1.\n  (?:\\B(\\.)[0-9]+\\b)|                      # .1\n  (?:\\b[0-9]+\\b(?!\\.))                     # 1\n)(?!\\$)",
          "captures": {
            "0": {
              "name": "constant.numeric.decimal.qml"
            },
            "1": {
              "name": "meta.delimiter.decimal.period.qml"
            },
            "2": {
              "name": "meta.delimiter.decimal.period.qml"
            },
            "3": {
              "name": "meta.delimiter.decimal.period.qml"
            },
            "4": {
              "name": "meta.delimiter.decimal.period.qml"
            },
            "5": {
              "name": "meta.delimiter.decimal.period.qml"
            },
            "6": {
              "name": "meta.delimiter.decimal.period.qml"
            }
          }
        }
      ]
    },
    "arguments": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.arguments.begin.bracket.round.qml"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.arguments.end.bracket.round.qml"
            }
          },
          "name": "meta.arguments.qml",
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "objects": {
      "patterns": [
        {
          "match": "[A-Z][A-Z0-9_$]*(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)",
          "name": "constant.other.object.qml"
        },
        {
          "match": "[a-zA-Z_$][\\w$]*(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)",
          "name": "variable.other.object.qml"
        }
      ]
    },
    "switch_statement": {
      "patterns": [
        {
          "begin": "\\bswitch\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.switch.qml"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.section.switch-block.end.bracket.curly.qml"
            }
          },
          "name": "meta.switch-statement.qml",
          "patterns": [
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.switch-expression.begin.bracket.round.qml"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.switch-expression.end.bracket.round.qml"
                }
              },
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "begin": "{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.section.switch-block.begin.bracket.curly.qml"
                }
              },
              "end": "(?=})",
              "patterns": [
                {
                  "begin": "\\bcase\\b",
                  "beginCaptures": {
                    "0": {
                      "name": "keyword.control.case.qml"
                    }
                  },
                  "end": ":",
                  "endCaptures": {
                    "0": {
                      "name": "punctuation.definition.section.case-statement.qml"
                    }
                  },
                  "patterns": [
                    {
                      "include": "#prevent_object_keys_matching"
                    },
                    {
                      "include": "$self"
                    }
                  ]
                },
                {
                  "match": "(?:^\\s*)?\\b(default)\\b\\s*(:)",
                  "captures": {
                    "1": {
                      "name": "keyword.control.default.qml"
                    },
                    "2": {
                      "name": "punctuation.definition.section.case-statement.qml"
                    }
                  }
                },
                {
                  "include": "$self"
                }
              ]
            }
          ]
        }
      ]
    },
    "docblock": {
      "patterns": [
        {
          "match": "(?x)\n((@)(?:access|api))\n\\s+\n(private|protected|public)\n\\b",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "constant.language.access-type.jsdoc"
            }
          }
        },
        {
          "match": "(?x)\n((@)author)\n\\s+\n(\n  [^@\\s<>*/]\n  (?:[^@<>*/]|\\*[^/])*\n)\n(?:\n  \\s*\n  (<)\n  ([^>\\s]+)\n  (>)\n)?",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "entity.name.type.instance.jsdoc"
            },
            "4": {
              "name": "punctuation.definition.bracket.angle.begin.jsdoc"
            },
            "5": {
              "name": "constant.other.email.link.underline.jsdoc"
            },
            "6": {
              "name": "punctuation.definition.bracket.angle.end.jsdoc"
            }
          }
        },
        {
          "match": "(?x)\n((@)borrows) \\s+\n((?:[^@\\s*/]|\\*[^/])+)    # <that namepath>\n\\s+ (as) \\s+              # as\n((?:[^@\\s*/]|\\*[^/])+)    # <this namepath>",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "entity.name.type.instance.jsdoc"
            },
            "4": {
              "name": "keyword.operator.control.jsdoc"
            },
            "5": {
              "name": "entity.name.type.instance.jsdoc"
            }
          }
        },
        {
          "name": "meta.example.jsdoc",
          "begin": "((@)example)\\s+",
          "end": "(?=@|\\*/)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          },
          "patterns": [
            {
              "match": "^\\s\\*\\s+"
            },
            {
              "contentName": "constant.other.description.jsdoc",
              "begin": "\\G(<)caption(>)",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  "name": "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  "name": "punctuation.definition.bracket.angle.end.jsdoc"
                }
              },
              "end": "(</)caption(>)|(?=\\*/)",
              "endCaptures": {
                "0": {
                  "name": "entity.name.tag.inline.jsdoc"
                },
                "1": {
                  "name": "punctuation.definition.bracket.angle.begin.jsdoc"
                },
                "2": {
                  "name": "punctuation.definition.bracket.angle.end.jsdoc"
                }
              }
            },
            {
              "match": "[^\\s@*](?:[^*]|\\*[^/])*",
              "captures": {
                "0": {
                  "name": "source.embedded.qml"
                }
              }
            }
          ]
        },
        {
          "match": "(?x) ((@)kind) \\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\b",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "constant.language.symbol-type.jsdoc"
            }
          }
        },
        {
          "match": "(?x)\n((@)see)\n\\s+\n(?:\n  # URL\n  (\n    (?=https?://)\n    (?:[^\\s*]|\\*[^/])+\n  )\n  |\n  # JSDoc namepath\n  (\n    (?!\n      # Avoid matching bare URIs (also acceptable as links)\n      https?://\n      |\n      # Avoid matching {@inline tags}; we match those below\n      (?:\\[[^\\[\\]]*\\])? # Possible description [preceding]{@tag}\n      {@(?:link|linkcode|linkplain|tutorial)\\b\n    )\n    # Matched namepath\n    (?:[^@\\s*/]|\\*[^/])+\n  )\n)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "variable.other.link.underline.jsdoc"
            },
            "4": {
              "name": "entity.name.type.instance.jsdoc"
            }
          }
        },
        {
          "match": "(?x)\n((@)template)\n\\s+\n# One or more valid identifiers\n(\n  [A-Za-z_$]         # First character: non-numeric word character\n  [\\w$.\\[\\]]*        # Rest of identifier\n  (?:                # Possible list of additional identifiers\n    \\s* , \\s*\n    [A-Za-z_$]\n    [\\w$.\\[\\]]*\n  )*\n)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "variable.other.jsdoc"
            }
          }
        },
        {
          "begin": "(?x)((@)template)\\s+(?={)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          },
          "end": "(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])",
          "patterns": [
            {
              "include": "#jsdoctype"
            },
            {
              "name": "variable.other.jsdoc",
              "match": "([A-Za-z_$][\\w$.\\[\\]]*)"
            }
          ]
        },
        {
          "match": "(?x)\n(\n  (@)\n  (?:arg|argument|const|constant|member|namespace|param|var)\n)\n\\s+\n(\n  [A-Za-z_$]\n  [\\w$.\\[\\]]*\n)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "variable.other.jsdoc"
            }
          }
        },
        {
          "begin": "((@)typedef)\\s+(?={)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          },
          "end": "(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])",
          "patterns": [
            {
              "include": "#jsdoctype"
            },
            {
              "name": "entity.name.type.instance.jsdoc",
              "match": "(?:[^@\\s*/]|\\*[^/])+"
            }
          ]
        },
        {
          "begin": "((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?={)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          },
          "end": "(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])",
          "patterns": [
            {
              "include": "#jsdoctype"
            },
            {
              "name": "variable.other.jsdoc",
              "match": "([A-Za-z_$][\\w$.\\[\\]]*)"
            },
            {
              "name": "variable.other.jsdoc",
              "match": "(?x)\n(\\[)\\s*\n[\\w$]+\n(?:\n  (?:\\[\\])?                                        # Foo[ ].bar properties within an array\n  \\.                                                # Foo.Bar namespaced parameter\n  [\\w$]+\n)*\n(?:\n  \\s*\n  (=)                                                # [foo=bar] Default parameter value\n  \\s*\n  (\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\n    (?>\n      \"(?:(?:\\*(?!/))|(?:\\\\(?!\"))|[^*\\\\])*?\" |                      # [foo=\"bar\"] Double-quoted\n      '(?:(?:\\*(?!/))|(?:\\\\(?!'))|[^*\\\\])*?' |                      # [foo='bar'] Single-quoted\n      \\[ (?:(?:\\*(?!/))|[^*])*? \\] |                                # [foo=[1,2]] Array literal\n      (?:(?:\\*(?!/))|\\s(?!\\s*\\])|\\[.*?(?:\\]|(?=\\*/))|[^*\\s\\[\\]])*   # Everything else\n    )*\n  )\n)?\n\\s*(?:(\\])((?:[^*\\s]|\\*[^\\s/])+)?|(?=\\*/))",
              "captures": {
                "1": {
                  "name": "punctuation.definition.optional-value.begin.bracket.square.jsdoc"
                },
                "2": {
                  "name": "keyword.operator.assignment.jsdoc"
                },
                "3": {
                  "name": "source.embedded.qml"
                },
                "4": {
                  "name": "punctuation.definition.optional-value.end.bracket.square.jsdoc"
                },
                "5": {
                  "name": "invalid.illegal.syntax.jsdoc"
                }
              }
            }
          ]
        },
        {
          "begin": "(?x)\n(\n  (@)\n  (?:define|enum|exception|export|extends|lends|implements|modifies\n  |namespace|private|protected|returns?|suppress|this|throws|type\n  |yields?)\n)\n\\s+(?={)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          },
          "end": "(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])",
          "patterns": [
            {
              "include": "#jsdoctype"
            }
          ]
        },
        {
          "match": "(?x)\n(\n  (@)\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\n)\n\\s+\n(\n  (?:\n    [^{}@\\s*] | \\*[^/]\n  )+\n)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "entity.name.type.instance.jsdoc"
            }
          }
        },
        {
          "contentName": "variable.other.jsdoc",
          "begin": "((@)(?:default(?:value)?|license|version))\\s+(([''\"]))",
          "beginCaptures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "variable.other.jsdoc"
            },
            "4": {
              "name": "punctuation.definition.string.begin.jsdoc"
            }
          },
          "end": "(\\3)|(?=$|\\*/)",
          "endCaptures": {
            "0": {
              "name": "variable.other.jsdoc"
            },
            "1": {
              "name": "punctuation.definition.string.end.jsdoc"
            }
          }
        },
        {
          "match": "((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^\\s*]+)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            },
            "3": {
              "name": "variable.other.jsdoc"
            }
          }
        },
        {
          "name": "storage.type.class.jsdoc",
          "match": "(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\b",
          "captures": {
            "1": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          }
        },
        {
          "include": "#inline-tags"
        },
        {
          "match": "((@)(?:[_$[:alpha:]][_$[:alnum:]]*))(?=\\s+)",
          "captures": {
            "1": {
              "name": "storage.type.class.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.block.tag.jsdoc"
            }
          }
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "begin": "{",
          "end": "}|(?=\\*/)",
          "patterns": [
            {
              "include": "#brackets"
            }
          ]
        },
        {
          "begin": "\\[",
          "end": "\\]|(?=\\*/)",
          "patterns": [
            {
              "include": "#brackets"
            }
          ]
        }
      ]
    },
    "inline-tags": {
      "patterns": [
        {
          "name": "constant.other.description.jsdoc",
          "match": "(\\[)[^\\]]+(\\])(?={@(?:link|linkcode|linkplain|tutorial))",
          "captures": {
            "1": {
              "name": "punctuation.definition.bracket.square.begin.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.bracket.square.end.jsdoc"
            }
          }
        },
        {
          "name": "entity.name.type.instance.jsdoc",
          "begin": "({)((@)(?:link(?:code|plain)?|tutorial))\\s*",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.bracket.curly.begin.jsdoc"
            },
            "2": {
              "name": "storage.type.class.jsdoc"
            },
            "3": {
              "name": "punctuation.definition.inline.tag.jsdoc"
            }
          },
          "end": "}|(?=\\*/)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          "patterns": [
            {
              "match": "\\G((?=https?://)(?:[^|}\\s*]|\\*[/])+)(\\|)?",
              "captures": {
                "1": {
                  "name": "variable.other.link.underline.jsdoc"
                },
                "2": {
                  "name": "punctuation.separator.pipe.jsdoc"
                }
              }
            },
            {
              "match": "\\G((?:[^{}@\\s|*]|\\*[^/])+)(\\|)?",
              "captures": {
                "1": {
                  "name": "variable.other.description.jsdoc"
                },
                "2": {
                  "name": "punctuation.separator.pipe.jsdoc"
                }
              }
            }
          ]
        }
      ]
    },
    "jsdoctype": {
      "patterns": [
        {
          "contentName": "entity.name.type.instance.jsdoc",
          "begin": "\\G({)",
          "beginCaptures": {
            "0": {
              "name": "entity.name.type.instance.jsdoc"
            },
            "1": {
              "name": "punctuation.definition.bracket.curly.begin.jsdoc"
            }
          },
          "end": "((}))\\s*|(?=\\*/)",
          "endCaptures": {
            "1": {
              "name": "entity.name.type.instance.jsdoc"
            },
            "2": {
              "name": "punctuation.definition.bracket.curly.end.jsdoc"
            }
          },
          "patterns": [
            {
              "include": "#brackets"
            }
          ]
        }
      ]
    },
    "directives": {
      "name": "comment.line.triple-slash.directive.qml",
      "begin": "^(///)\\s*(?=<(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name)\\s*=\\s*((\\'([^\\'\\\\]|\\\\.)*\\')|(\\\"([^\\\"\\\\]|\\\\.)*\\\")|(\\`([^\\`\\\\]|\\\\.)*\\`)))+\\s*/>\\s*$)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.qml"
        }
      },
      "end": "(?=$)",
      "patterns": [
        {
          "name": "meta.tag.qml",
          "begin": "(<)(reference|amd-dependency|amd-module)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.directive.qml"
            },
            "2": {
              "name": "entity.name.tag.directive.qml"
            }
          },
          "end": "/>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.directive.qml"
            }
          },
          "patterns": [
            {
              "name": "entity.other.attribute-name.directive.qml",
              "match": "path|types|no-default-lib|lib|name"
            },
            {
              "name": "keyword.operator.assignment.qml",
              "match": "="
            },
            {
              "include": "#string"
            }
          ]
        }
      ]
    },
    "punctuation-semicolon": {
      "name": "punctuation.terminator.statement.qml",
      "match": ";"
    }
  },
  "scopeName": "source.qml"
}